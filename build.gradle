plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.0'
}

sourceCompatibility = 1.8

allure {

    autoconfigure = true
    version = '2.13.2'}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "failed", "skipped", "standardOut", "standardError"
        showStandardStreams = true
    }
}

configurations.configureEach {
    resolutionStrategy.dependencySubstitution {
        substitute module('com.google.guava:guava') with module('com.google.guava:guava:31.1-jre')
    }


dependencies {
    implementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.codeborne:selenide:6.19.1'
    implementation('io.qameta.allure:allure-selenide:2.13.2')
    implementation('com.google.guava:guava:32.1.2-jre') {
        capabilities {
            requireCapability('com.google.guava:guava:jre')
        }
    }
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.2')
    testImplementation('io.qameta.allure:allure-selenide:2.13.2')
    testRuntimeOnly('io.qameta.allure:allure-junit5:2.13.2')
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
}
}